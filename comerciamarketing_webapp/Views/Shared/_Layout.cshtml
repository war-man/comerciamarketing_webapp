<!DOCTYPE html>
<html manifest="">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0,maximum-scale=1.0,user-scalable=0, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="Comercia Marketing App">
    <title>@ViewData["Title"]</title>

    @Html.Partial("~/Views/Shared/Styles2.cshtml")
    <style>
        #mydivInfo {
            position: absolute;
            z-index: 9;
            background-color: #fff;
            border: 1px solid #d3d3d3;
            display: none;
            left: 5%;
            top: 50%;
        }

        #mydivInfoheader {
            padding: 10px;
            cursor: move;
            z-index: 10;
            background-color: #fff;
        }

        #mydivConf {
            position: absolute;
            z-index: 9;
            background-color: #f1f1f1;
            border: 1px solid #d3d3d3;
            text-align: center;
            display: none;
            left: 50%;
            top: 50%;
        }

        #mydivConfheader {
            padding: 10px;
            cursor: move;
            z-index: 10;
            background-color: #ff0000;
            color: #fff;
        }
    </style>
    @if (ViewBag.Title == "Comercia Marketing - Template preview2" || ViewBag.Title == "Comercia Marketing - Template preview2on")
    {
        <style>

            #rightss {
                height: 500px;
                overflow-y: scroll;
            }

            .modal {
                overflow: auto !important;
            }

            #sig-canvas {
                width: 200px;
                height: 150px;
                border-style: dashed;
                border-radius: 0.50px;
                border-color: lightgray;
            }

            .currency {
            }

            .currency-symbol {
                position: absolute;
                padding: 7px 4px 0px;
                font-size: 13px;
            }

            .currency-symbolv2 {
                position: absolute;
                padding: 1px 4px 0px;
                font-size: 12px;
            }

            #loading {
                width: 100%;
                height: 100%;
                top: 0px;
                left: 0px;
                position: fixed;
                opacity: 0.7;
                background-color: #fff;
                z-index: 99;
                text-align: center;
            }

            #loading-content {
                margin-top: 20%;
            }

            .hide {
                display: none;
            }


            /*DATATABLES*/
            table {
                border-collapse: collapse;
                margin: 0;
                padding: 0;
                width: 100%;
            }

                table tr {
                    padding: .35em;
                }

                table th, table td {
                    padding: .625em;
                    text-align: left;
                }

                table th {
                    font-size: .9em;
                    letter-spacing: .1em;
                    text-transform: uppercase;
                }

                table td {
                    font-size: .3em;
                }
            /**/
            @@media screen and (max-width: 2000px) {

                table td {
                    font-size: .9em;
                }
            }

            @@media screen and (max-width: 850px) {
                table th {
                    font-size: .8em;
                    letter-spacing: .1em;
                    text-transform: uppercase;
                }

                table td {
                    font-size: .7em;
                }
            }

            /**/
            /**/


            @@media screen and (max-width: 400px) {

                table {
                    border: 0;
                }

                    table thead {
                        display: none;
                    }

                    table tr {
                        border-bottom: 3px solid #ddd;
                        display: block;
                        margin-bottom: .625em;
                    }

                    table td {
                        border-bottom: 1px solid #ddd;
                        display: block;
                        font-size: .8em;
                        text-align: left;
                    }

                        table td:before {
                            content: attr(data-label);
                            float: left;
                            font-weight: bold;
                            text-transform: uppercase;
                        }

                        table td:last-child {
                            border-bottom: 0;
                        }
            }
            /**/
            /*END DATATABLES*/

        </style>
    }
    @if (ViewBag.Title != "Comercia Marketing - Template preview2" || ViewBag.Title != "Comercia Marketing - Template preview2on")
    {
        <style>
            .disable {
                opacity: 0.4;
            }

                /*Disable scrolling on child elements*/
                .disable div,
                .disable textarea {
                    overflow: hidden;
                }

            #rightss {
                height: 500px;
                overflow-y: scroll;
            }

            .modal {
                overflow: auto !important;
            }

            #sig-canvas {
                width: 250px;
                height: 150px;
                border-style: dashed;
                border-radius: 0.50px;
                border-color: lightgray;
            }

            .map-responsive {
                overflow: hidden;
                padding-bottom: 56.25%;
                position: relative;
                height: 300px;
            }

                .map-responsive iframe {
                    left: 0;
                    top: 0;
                    height: 100%;
                    width: 100%;
                    position: absolute;
                }

            .currency {
            }

            .currency-symbol {
                position: absolute;
                padding: 7px 4px 0px;
                font-size: 13px;
            }

            .currency-symbolv2 {
                position: absolute;
                padding: 1px 4px 0px;
                font-size: 13px;
            }

            #loading {
                width: 100%;
                height: 100%;
                top: 0px;
                left: 0px;
                position: fixed;
                opacity: 0.7;
                background-color: #fff;
                z-index: 99;
                text-align: center;
            }

            #loading-content {
                margin-top: 20%;
            }

            .hide {
                display: none;
            }


            /*DATATABLES*/
            table#order-listing {
                border-collapse: collapse;
                margin: 0;
                padding: 0;
                width: 100%;
            }

                table#order-listing tr {
                    padding: .35em;
                }

                table#order-listing th, table td {
                    padding: .625em;
                    text-align: left;
                }

                table#order-listing th {
                    font-size: .9em;
                    letter-spacing: .1em;
                    text-transform: uppercase;
                }

                table#order-listing td {
                    font-size: .3em;
                }
            /**/
            @@media screen and (max-width: 2000px) {

                table#order-listing td {
                    font-size: .9em;
                }
            }

            @@media screen and (max-width: 850px) {
                table#order-listing th {
                    font-size: .8em;
                    letter-spacing: .1em;
                    text-transform: uppercase;
                }

                table#order-listing td {
                    font-size: .7em;
                }
            }



            /**/
            @@media screen and (max-width: 530px) {

                table#order-listing {
                    border: 0;
                }

                    table#order-listing thead {
                        display: none;
                    }

                    table#order-listing tr {
                        border-bottom: 3px solid #ddd;
                        display: block;
                        margin-bottom: .625em;
                    }

                    table#order-listing td {
                        border-bottom: 1px solid #ddd;
                        display: block;
                        font-size: .8em;
                        text-align: right;
                    }

                        table#order-listing td:before {
                            content: attr(data-label);
                            float: left;
                            font-weight: bold;
                            text-transform: uppercase;
                        }

                        table#order-listing td:last-child {
                            border-bottom: 0;
                        }
            }
            /**/
            /*END DATATABLES*/

            /*DATATABLES*/
            table#order-listing2 {
                border-collapse: collapse;
                margin: 0;
                padding: 0;
                width: 100%;
            }

                table#order-listing2 tr {
                    padding: .35em;
                }

                table#order-listing2 th, table td {
                    padding: .625em;
                    text-align: left;
                }

                table#order-listing2 th {
                    font-size: .9em;
                    letter-spacing: .1em;
                    text-transform: uppercase;
                }

                table#order-listing2 td {
                    font-size: .3em;
                }
            /**/
            @@media screen and (max-width: 2000px) {

                table#order-listing2 td {
                    font-size: .9em;
                }
            }

            @@media screen and (max-width: 850px) {
                table#order-listing2 th {
                    font-size: .8em;
                    letter-spacing: .1em;
                    text-transform: uppercase;
                }

                table#order-listing2 td {
                    font-size: .7em;
                }
            }



            /**/
            @@media screen and (max-width: 530px) {

                table#order-listing2 {
                    border: 0;
                }

                    table#order-listing2 thead {
                        display: none;
                    }

                    table#order-listing2 tr {
                        border-bottom: 3px solid #ddd;
                        display: block;
                        margin-bottom: .625em;
                    }

                    table#order-listing2 td {
                        border-bottom: 1px solid #ddd;
                        display: block;
                        font-size: .8em;
                        text-align: right;
                    }

                        table#order-listing2 td:before {
                            content: attr(data-label);
                            float: left;
                            font-weight: bold;
                            text-transform: uppercase;
                        }

                        table#order-listing2 td:last-child {
                            border-bottom: 0;
                        }
            }


            /**PARA MODALS*/

            /*DATATABLES*/
            table#resultsRetail {
                border-collapse: collapse;
                margin: 0;
                padding: 0;
                width: 100%;
            }

            /**/




            /**/
            /**/



            table#resultsRetail {
                border: 0;
            }

                table#resultsRetail thead {
                    display: none;
                }

                table#resultsRetail tr {
                    border-bottom: 3px solid #ddd;
                    display: block;
                    margin-bottom: .625em;
                }

                table#resultsRetail td {
                    border-bottom: 1px solid #ddd;
                    display: block;
                    font-size: .8em;
                    text-align: right;
                }

                    table#resultsRetail td:before {
                        content: attr(data-label);
                        float: left;
                        font-weight: normal;
                        text-transform: uppercase;
                    }

                    table#resultsRetail td:last-child {
                        border-bottom: 0;
                    }

            /**/
            /*END DATATABLES*/
            .flexRadio {
                display: flex;
                /* Optional, if you want the DIVs 100% width: */
                flex-wrap: wrap;
                margin-right: -33.5px;
                margin-left: -2.5px;
            }

                .flexRadio > .hRadio {
                    order: 1;
                }

                .flexRadio > .fRadio {
                    order: 2;
                }

            .map-icon-label .map-icon {
                font-size: 24px;
                color: #FFFFFF;
                line-height: 48px;
                text-align: center;
                white-space: nowrap;
            }
        </style>
    }

    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-116898086-2"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-116898086-2');
    </script>

</head>
<body class="horizontal-menu-2">
    <!--GLOBAL LOADER-->
    <div id="loading" class="hide">
        <div id="loading-content">


            <div class="circle-loader"></div>


        </div>
    </div>
    <!---->
    <div style="background-color:#000">.</div>
    <div class="container-scroller">
        <!-- Horizontal Menu Start -->
        @if (ViewBag.Title != "Comercia Marketing")
        {
            if (ViewBag.Title == "Comercia Marketing - Activityea")
            {

            }
            else
            {
                @Html.Partial("~/Views/Shared/Menu2.cshtml")
            }

        }
        <!-- Horizontal Menu Ends -->
        @RenderBody()

    </div>

    @Html.Partial("~/Views/Shared/Scripts2.cshtml")
</body>
</html>
@if (ViewBag.Title != "Comercia Marketing - FormsM")
{
    <script type="text/javascript">
        $(function () {

            var t1 = "@ViewBag.filtrofechastart";
            var t2 = "@ViewBag.filtrofechaend";

            var start = moment(t1, "MM-DD-YYYY");
        var end = moment(t2, "MM-DD-YYYY");
            //var start = moment();
            //var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }

            $('#reportrange').daterangepicker({

                startDate: start,
                endDate: end,
                autoApply: true,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);

        });
    </script>
    <script>
        var start = moment();
        var end = moment();

        $(function () {
            $('input[name="dailyStatsM"]').daterangepicker({
                startDate: start,
                endDate: end,
                autoApply: true,
                minDate: moment().startOf('month'),
                maxDate: moment().endOf('month')
            });
        });
    </script>
}
@if (ViewBag.Title == "Comercia Marketing - CustomersM stats")
{
    <script type="text/javascript">
        @*google.charts.load('current', {
            'packages': ['geochart'],
            // Note: you will need to get a mapsApiKey for your project.
            // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings
            'mapsApiKey': 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY'
        });
        google.charts.setOnLoadCallback(drawRegionsMap);

        function drawRegionsMap() {
            var data = google.visualization.arrayToDataTable([
                ['State', 'Visits'],
                ['Alabama', 0],
                ['Alaska', 0],
                ['Arizona', 0],
                ['Arkansas', 0],
                ['California', 0],
                ['Colorado', 0],
                ['Connecticut', 0],
                ['Delaware', 0],
                ['Florida', 0],
                ['Georgia', 0],
                ['Hawaii', 0],
                ['Idaho', 0],
                ['Illinois', 0],
                ['Indiana', 0],
                ['Iowa', 0],
                ['Kansas', 0],
                ['Kentucky', 0],
                ['Louisiana', 0],
                ['Maine', 0],
                ['Maryland', 0],
                ['Massachusetts', 0],
                ['Michigan', 0],
                ['Minnesota', 0],
                ['Mississippi', 0],
                ['Missouri', 0],
                ['Montana', 0],
                ['Nebraska', 0],
                ['Nevada', 0],
                ['New Hampshire', 0],
                ['New Jersey', 0],
                ['New Mexico', 0],
                ['New York', 0],
                ['North Carolina', 0],
                ['North Dakota', 0],
                ['Ohio', 0],
                ['Oklahoma', 0],
                ['Oregon', 0],
                ['Pennsylvania', 0],
                ['Rhode Island', 0],
                ['South Carolina', 0],
                ['South Dakota', 0],
                ['Tennessee', @ViewBag.rutascount],
                ['Texas', 0],
                ['Utah', 0],
                ['Vermont', 0],
                ['Virginia', 0],
                ['Washington', 0],
                ['West Virginia', 0],
                ['Wisconsin', 0],
                ['Wyoming', 0]
            ]);

            var options = {
                width: 556,
                height: 347,
                region: "US",
                resolution: "provinces"
            };

            var chart = new google.visualization.GeoChart(document.getElementById('regions_div'));

            chart.draw(data, options);
        }*@
    </script>
}


@if (ViewBag.Title == "Comercia Marketing - Home")
{
    <script>
    'use strict';
    // This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded.
    $(document).ready(function () {
        Initialize();
    });

    function Initialize() {

    var map = new google.maps.Map(document.getElementById('map-with-marker'), {
        zoom: 4,
        scrollwheel: true,
        center: { lat: 35.2289067, lng: -86.885620 }

    });

    var data = @Html.Raw(ViewBag.routes_map);
    var markers = [];
    // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
    $.each(data, function (i, item) {
        var marker;

            var image = '@Url.Content("~/Content/newstyle2/images/marker32x32.png")';


            if (item.demo_state == 3) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName

                });
            }
            if (item.demo_state == 2) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName


                });
            }
            if (item.demo_state == 1) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName

                });
            }
            if (item.demo_state == 4) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName
                    //icon: image

                });
            }



        // Make the marker-pin blue!
        //if (item.demo_state == "3") {
        //    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/orange-dot.png')
        //}
        //if (item.demo_state == "2") {
        //    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/green-dot.png')
        //}
        //if (item.demo_state == "1") {
        //    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/red-dot.png')
        //}
        //if (item.demo_state == "4") {
        //    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue-dot.png')
        //}

        // put in some information about each json object - in this case, the opening hours.

        //colocamos la url de la demo
        //var url = '@Url.Action("PreviewSendDemoResume", "Demos", new { id = "DEMOID" })';


        //url = url.replace('DEMOID', item.id);

        //var infowindow = new google.maps.InfoWindow({
        //    content: "<div class='infoDiv'><h8>Place: " + item.store + ".</h8><br>" + "<div><h8>Customer: " + item.customer + ".</h8><br><h8>Visit date: " + item.date + ".</h8><br><h8>Representatives: " + item.representatives + ".</h8><br><h8>Comment: " + item.comment + ".</h8><br><a href='" + "#" + "' class='btn btn-primary' target='_blank'>Preview</a></div></div>"
        //});
        var estructuradiv = '<div  id="RouteDetails_' + item.id + '">';
        estructuradiv += '<div class="card">';
        estructuradiv += '<div class="card-body">';
        estructuradiv += '<div class="row mt-4">';
        estructuradiv += '<div class="col-md-12">';
        estructuradiv += ' <h5>Visit details</h5>';
        estructuradiv += '<ul class="nav nav-tabs tab-simple-styled" role="tablist">';
        estructuradiv += '<li class="nav-item">';
        estructuradiv += '<a class="nav-link active" id="tab-3-1_' + item.id + '" data-toggle="tab" href="#home-3-1_' + item.id + '" role="tab" aria-controls="home-3-1_' + item.id + '" aria-selected="true"><i class="mdi mdi-weather-night"></i>Resume</a>';
        estructuradiv += '</li>';
        estructuradiv += '<li class="nav-item">';
        estructuradiv += '<a class="nav-link" id="tab-3-2_' + item.id + '" data-toggle="tab" href="#profile-3-2_' + item.id + '" role="tab" aria-controls="profile-3-2_' + item.id + '" aria-selected="false"><i class="mdi mdi-tag-multiple"></i>Comments</a>';
        estructuradiv += '</li>';
        estructuradiv += '</ul>';
        estructuradiv += '<div class="tab-content tab-content-basic">';
        estructuradiv += '<div class="tab-pane fade show active" id="home-3-1_' + item.id + '" role="tabpanel" aria-labelledby="tab-3-1_' + item.id + '">';
        estructuradiv += '<p class="mb-0" > ID: ' + item.id + '</p>';
        estructuradiv += '<p class="mb-0" > STORE: ' + item.store + '</p>';
        estructuradiv += '<p class="mb-0"> ADDRESS: ' + item.address + '</p>';
        estructuradiv += '<p > DATE: ' + item.date + '</p>';
        estructuradiv += '<p > ROUTE: ' + item.representatives + '</p>';
        estructuradiv += '</div>';
        estructuradiv += '<div class="tab-pane fade" id="profile-3-2_' + item.id + '" role="tabpanel" aria-labelledby="tab-3-2_' + item.id + '">';
        estructuradiv += '<p > COMMENT: ' + item.comment + '</p>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';


        var infowindow = new google.maps.InfoWindow({
            content: estructuradiv
        });
        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
            //myFunction(item.id, item.store, item.customer, item.date, item.representatives, item.comment);
        });

        marker.addListener('dblclick', function () {
            map.setZoom(18);
            map.setCenter(marker.getPosition());

            // We get the map's default panorama and set up some defaults.
            // Note that we don't yet set it visible.
            panorama = map.getStreetView();
            panorama.setPosition(marker.getPosition());
            panorama.setPov(({
                heading: 265,
                pitch: 0
            }));
        });

        //Agregamos el marcador al array de marcadores
        markers.push(marker);


    })


    // Add a marker clusterer to manage the markers.
    var markerCluster = new MarkerClusterer(map, markers,
        { imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' });





}



    //function myFunction(ID, store, customer, date, representatives, comment ) {
    //    var id_mapitem = document.getElementById("map_id");
    //    var store_mapitem = document.getElementById("map_storename");
    //    var store_customeritem = document.getElementById("map_customername");
    //    var store_dateitem = document.getElementById("map_date");
    //    var store_representativeitem = document.getElementById("map_representatives");
    //    var store_commentitem = document.getElementById("map_comment");


    //    id_mapitem.innerText = "";
    //    store_mapitem.innerText = "";
    //    store_customeritem.innerText = "";
    //    store_dateitem.innerText = "";
    //    store_representativeitem.innerText = "";
    //    store_commentitem.innerText = "";

    //    id_mapitem.innerText = "Visit ID: " + ID;
    //    store_mapitem.innerText = "Store: " + store;
    //    //store_customeritem.innerText = "Customer: " + customer;
    //    store_dateitem.innerText = "Date: " + date;
    //    store_representativeitem.innerText = "Route: " + representatives;
    //    store_commentitem.innerText = "Comment: " + comment;

    //    var x = document.getElementById("RouteDetails");
    //    if (x.style.display === "none") {
    //        x.style.display = "block";
    //    } else {
    //        //x.style.display = "none";
    //    }
    //}

    </script>
    <!--PARA CERRAR DIV MAP-->
    <script>
        var button = document.getElementById('close_divmap'); // Assumes element with id='button'

        button.onclick = function () {
            var div = document.getElementById('RouteDetails');
            div.style.display = 'none';

        };

    </script>


    <script>
    $(function () {
        $('#click_filterMain').click(function () {


            var st = new Date($('#reportrange').data('daterangepicker').startDate);
            var ed = new Date($('#reportrange').data('daterangepicker').endDate);

            var idstore = document.getElementById('filterstore').value;


        var url = '@Url.Action("Main", "Home", new { fstartd = "START", fendd = "FINISH", store = "STORE" })';


            url = url.replace('START', st.toLocaleDateString());

            url = url.replace('STORE', idstore);
        var newurl = url;


            newurl = newurl.replace('FINISH', ed.toLocaleDateString());
        newurl = newurl.replace(/&amp;/g, "&");
        //alert(newurl);
        window.location.href = newurl;




        });
    });





    </script>



}
<!--FORM BUILDER-->
@if (ViewBag.Title == "Comercia Marketing - FormsM")
{
    @Html.Partial("~/Views/Shared/FormBuilderScriptM.cshtml")



}

@if (ViewBag.Title == "Comercia Marketing - RoutesM details")
{
    <script>
        window.onload = function () {

            (function ($) {
                'use strict';
                $('#deleteModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal

                    var IDvisit = button.data("id");// Extract info from data-* attributes
                    var Desvisit = button.data("description");


                    // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                    // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                    var modal = $(this);
                    //modal.find('.modal-title').text('Edit data: ' + recipient)
                    modal.find('.modal-body input[name="ID_visitD"]').val(IDvisit);
                    $("#descriptionD").text(Desvisit);

                })
            })(jQuery);

        }

    </script>
    @*<script>

           $(document).ready(function () {

               $(function () {
                   $('#click_animation').click(function () {
                       initialize2();
                   });
                });


           var directionsDisplay;
            var directionsService = new google.maps.DirectionsService();
            var map;

            function initialize2() {
                directionsDisplay = new google.maps.DirectionsRenderer({ suppressMarkers: true });

                map = new google.maps.Map(document.getElementById("map-with-marker"));
                directionsDisplay.setMap(map);
                calcRoute();
            }

            function calcRoute() {


                var data2 = Html.Raw(ViewBag.routes_map);
                var wayp = [];

                $.each(data2, function (i, item) {
                    var wp = {
                        'location': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                        'stopover': true
                    };


                    wayp.push(wp);
                });

                var f = data2.length -1;

                start = new google.maps.LatLng(data2[0].GeoLong, data2[0].GeoLat);
                end = new google.maps.LatLng(data2[f].GeoLong, data2[f].GeoLat);

                var request = {
                    origin: start,
                    destination: end,
                    waypoints: wayp,
                    optimizeWaypoints: true,
                    travelMode: google.maps.DirectionsTravelMode.DRIVING
                };
                directionsService.route(request, function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                    } else {
                        alert("directions response " + status);
                    }
                });
               }
           });
        </script>*@
    <script>
        var autoDriveSteps = new Array();
        var speedFactor = 10; // 10x faster animated drive

        function setAnimatedRoute(origin, destination, map) {
            // init routing services
            var directionsService = new google.maps.DirectionsService;

            var directionsRenderer = new google.maps.DirectionsRenderer({
                setMap: map
            });

            //calculate route
            directionsService.route({
                origin: origin,
                destination: destination,
                travelMode: google.maps.TravelMode.DRIVING
            },
                function (response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        // display the route
                        directionsRenderer.setDirections(response);

                        // calculate positions for the animation steps
                        // the result is an array of LatLng, stored in autoDriveSteps
                        autoDriveSteps = new Array();
                        var remainingSeconds = 0;
                        var leg = response.routes[0].legs[0]; // supporting single route, single legs currently
                        leg.steps.forEach(function (step) {
                            var stepSeconds = step.duration.value;
                            var nextStopSeconds = speedFactor - remainingSeconds;
                            while (nextStopSeconds <= stepSeconds) {
                                var nextStopLatLng = getPointBetween(step.start_location, step.end_location, nextStopSeconds / stepSeconds);
                                autoDriveSteps.push(nextStopLatLng);
                                nextStopSeconds += speedFactor;
                            }
                            remainingSeconds = stepSeconds + speedFactor - nextStopSeconds;
                        });
                        if (remainingSeconds > 0) {
                            autoDriveSteps.push(leg.end_location);
                        }
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });
        }

        // helper method to calculate a point between A and B at some ratio
        function getPointBetween(a, b, ratio) {
            return new google.maps.LatLng(a.lat() + (b.lat() - a.lat()) * ratio, a.lng() + (b.lng() - a.lng()) * ratio);
        }

        // start the route simulation
        function startRouteAnimation(marker) {
            var autoDriveTimer = setInterval(function () {
                // stop the timer if the route is finished
                if (autoDriveSteps.length === 0) {
                    clearInterval(autoDriveTimer);
                } else {
                    // move marker to the next position (always the first in the array)
                    marker.setPosition(autoDriveSteps[0]);
                    // remove the processed position
                    autoDriveSteps.shift();
                }
            },
                1000);
        }

    </script>
    <script>
    'use strict';
    // This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded.
    $(document).ready(function () {
        Initialize();

    });


    function Initialize() {

    var map = new google.maps.Map(document.getElementById('map-with-marker'), {
        zoom: 6,
        scrollwheel: true,
        center: { lat: 35.2289067, lng: -86.885620 }

    });
        directionsDisplay = new google.maps.DirectionsRenderer({ suppressMarkers: true });

        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        directionsDisplay.setMap(map);

        calcRoute();



        var data2;
                function calcRoute() {


            data2 = @Html.Raw(ViewBag.routes_animated);
            var wayp = [];

            $.each(data2, function (i, item) {
                var wp = {
                    'location': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    'stopover': true
                };


                wayp.push(wp);
            });

            var f = data2.length -1;

            start = new google.maps.LatLng(data2[0].GeoLong, data2[0].GeoLat);
            end = new google.maps.LatLng(data2[f].GeoLong, data2[f].GeoLat);

            var request = {
                origin: start,
                destination: end,
                waypoints: wayp,
                optimizeWaypoints: true,
                travelMode: google.maps.DirectionsTravelMode.DRIVING
            };
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                     //directionsDisplay.setOptions({ preserveViewport: true });//Si quisiera que el zoom fuera manejado por el control map pero hay que cambiarle el center
                    directionsDisplay.setDirections(response);

                } else {
                    alert("directions response " + status);
                }
            });
        }
        //EJEMPLO DE ICONS
        //if (item.demo_state == 3) {
        //    marker = new mapIcons.Marker({
        //        position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
        //        map: map,
        //        animation: google.maps.Animation.DROP,
        //        title: item.PlaceName,

        //        icon: {
        //            path: mapIcons.shapes.MAP_PIN,
        //            fillColor: '#ff9900',
        //            fillOpacity: 1,
        //            strokeColor: '',
        //            strokeWeight: 0
        //        },
        //        map_icon_label: '<span class="map-icon map-icon-store"></span>'

        //    });
        //}


    var data = @Html.Raw(ViewBag.routes_map);
    var markers = [];
    // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(data, function (i, item) {
            var image = '@Url.Content("~/Content/newstyle2/images/marker32x32.png")';
            var marker;

            if (item.demo_state == 3) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName

                });
            }
            if (item.demo_state == 2) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName


                });
            }
            if (item.demo_state == 1) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName

                });
            }
            if (item.demo_state == 4) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName
                    //icon: image,
                    //label: '1'
                });
            }




        // put in some information about each json object - in this case, the opening hours.

        //colocamos la url de la demo
        //var url = '@Url.Action("PreviewSendDemoResume", "Demos", new { id = "DEMOID" })';

        //var infowindow = new google.maps.InfoWindow({
        //    content: "<div class='infoDiv'><h8>Place: " + item.store + ".</h8><br>" + "<div><h8>Customer: " + item.customer + ".</h8><br><h8>Visit date: " + item.date + ".</h8><br><h8>Representatives: " + item.representatives + ".</h8><br><h8>Comment: " + item.comment + ".</h8><br><a href='" + "#" + "' class='btn btn-primary' target='_blank'>Preview</a></div></div>"
        //});

        //url = url.replace('DEMOID', item.id);
            var estructuradiv = '<div  id="RouteDetails_'+ item.id +'">';
            estructuradiv += '<div class="card">';
            estructuradiv += '<div class="card-body">';
            estructuradiv += '<div class="row mt-4">';
            estructuradiv += '<div class="col-md-12">';
            estructuradiv += ' <h5>Visit details</h5>';
            estructuradiv += '<ul class="nav nav-tabs tab-simple-styled" role="tablist">';
            estructuradiv += '<li class="nav-item">';
            estructuradiv += '<a class="nav-link active" id="tab-3-1_' + item.id + '" data-toggle="tab" href="#home-3-1_' + item.id + '" role="tab" aria-controls="home-3-1_' + item.id +'" aria-selected="true"><i class="mdi mdi-weather-night"></i>Resume</a>';
            estructuradiv += '</li>';
            estructuradiv += '<li class="nav-item">';
            estructuradiv += '<a class="nav-link" id="tab-3-2_' + item.id + '" data-toggle="tab" href="#profile-3-2_' + item.id + '" role="tab" aria-controls="profile-3-2_' + item.id + '" aria-selected="false"><i class="mdi mdi-tag-multiple"></i>Comments</a>';
            estructuradiv += '</li>';
            estructuradiv += '</ul>';
            estructuradiv += '<div class="tab-content tab-content-basic">';
            estructuradiv += '<div class="tab-pane fade show active" id="home-3-1_' + item.id + '" role="tabpanel" aria-labelledby="tab-3-1_' + item.id + '">';
            estructuradiv += '<p class="mb-0" > ID: ' + item.id + '</p>';
            estructuradiv += '<p class="mb-0" > STORE: ' + item.store  +'</p>';
            estructuradiv += '<p class="mb-0"> ADDRESS: ' + item.address +'</p>';
            estructuradiv += '<p > DATE: ' +item.date +'</p>';
            estructuradiv += '<p > REPRESENTATIVES: ' + item.representatives +'</p>';
            estructuradiv += '</div>';
            estructuradiv += '<div class="tab-pane fade" id="profile-3-2_' + item.id + '" role="tabpanel" aria-labelledby="tab-3-2_' + item.id + '">';
            estructuradiv += '<p > COMMENT: '+ item.comment +'</p>';
            estructuradiv += '</div>';
            estructuradiv += '</div>';
            estructuradiv += '</div>';
            estructuradiv += '</div>';
            estructuradiv += '</div>';
            estructuradiv += '</div>';
            estructuradiv += '</div>';


        var infowindow = new google.maps.InfoWindow({
            content: estructuradiv
        });

            function toggleBounce() {
                if (marker.getAnimation() !== null) {
                    marker.setAnimation(null);
                } else {
                    marker.setAnimation(4);
                }
            }
        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
            toggleBounce();
            //myFunction(item.id, item.store, item.customer, item.date, item.representatives, item.comment);
        });

        marker.addListener('dblclick', function () {
            map.setZoom(18);
            map.setCenter(marker.getPosition());

            // We get the map's default panorama and set up some defaults.
            // Note that we don't yet set it visible.
            panorama = map.getStreetView();
            panorama.setPosition(marker.getPosition());
            panorama.setPov(({
                heading: 265,
                pitch: 0
            }));
        });

        //Agregamos el marcador al array de marcadores
        markers.push(marker);


    })


    //// Add a marker clusterer to manage the markers.
    //var markerCluster = new MarkerClusterer(map, markers,
    //    { imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' });
       // PARA ANIMACION
        //var startf = new google.maps.LatLng(data2[0].GeoLong, data2[0].GeoLat);
        //var ef = data2.length - 1;
        //var nmarker = new mapIcons.Marker({
        //    position: startf,
        //    Map: map,
        //    icon: {
        //        path: mapIcons.shapes.MAP_PIN,
        //        fillColor: '#8862e0',
        //        fillOpacity: 1,
        //        strokeColor: '',
        //        strokeWeight: 0
        //    },
        //    map_icon_label: '<span class="map-icon map-icon-taxi-stand"></span>'

        //});

        //var endf = new google.maps.LatLng(data2[ef].GeoLong, data2[ef].GeoLat);
        //setAnimatedRoute(startf,endf, map);
        //startRouteAnimation(nmarker);
}



    //function myFunction(ID, store, customer, date, representatives, comment ) {
    //    var id_mapitem = document.getElementById("map_id");
    //    var store_mapitem = document.getElementById("map_storename");
    //    var store_customeritem = document.getElementById("map_customername");
    //    var store_dateitem = document.getElementById("map_date");
    //    var store_representativeitem = document.getElementById("map_representatives");
    //    var store_commentitem = document.getElementById("map_comment");


    //    id_mapitem.innerText = "";
    //    store_mapitem.innerText = "";
    //    store_customeritem.innerText = "";
    //    store_dateitem.innerText = "";
    //    store_representativeitem.innerText = "";
    //    store_commentitem.innerText = "";

    //    id_mapitem.innerText = "ID: " + ID;
    //    store_mapitem.innerText = "STORE: " + store;
    //    //store_customeritem.innerText = "Customer: " + customer;
    //    store_dateitem.innerText = "DATE: " + date;
    //    store_representativeitem.innerText = "REPRESENTATIVES: " + representatives;
    //    store_commentitem.innerText = comment;

    //    ////LLAMADA AJAX PARA TIMELINE
    //    //$.ajax
    //    //    ({
    //    //        url: '/Home/GetTimeline',
    //    //        type: 'POST',
    //    //        datatype: 'application/json',
    //    //        contentType: 'application/json',
    //    //        data: JSON.stringify({
    //    //            idvisit: ID
    //    //        }),
    //    //        success: function (result) {

    //    //            $("#timelinemap").html("");
    //    //            $.each($.parseJSON(result), function (i, brands) {

    //    //                    $("#timelinemap").append
    //    //                        ($('<option selected></option>').val(brands.FirmCode).html(brands.FirmName));




    //    //            }

    //    //            )
    //    //            getProductsline();

    //    //        },
    //    //        error: function () {
    //    //            alert("Whooaaa! Something went wrong..")
    //    //        },
    //    //    });
    //    ////FIN LLAMADA AJAX

    //    var x = document.getElementById("RouteDetails");
    //    if (x.style.display === "none") {
    //        x.style.display = "block";
    //    } else {
    //        //x.style.display = "none";
    //    }
    //}

    </script>
    <!--PARA CERRAR DIV MAP-->
    <script>
        var button = document.getElementById('close_divmap'); // Assumes element with id='button'

        button.onclick = function () {
            var div = document.getElementById('RouteDetails');
            div.style.display = 'none';

        };

    </script>






}





<script>
    $(document).ready(function () {
        $('#storesM').on('change', function () {
            var conceptName = $('#storesM').find(":selected").text();

            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;

            alert(valueSelected);
        });
    });

</script>

<!--SELECT MULTI ROUTES-->
@if (ViewBag.Title == "Comercia Marketing - RoutesM" || ViewBag.Title == "Comercia Marketing - RoutesM_calendar")
{
    <script>
        window.onload = function () {

            (function ($) {
                'use strict';
                $('#deleteModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal

                    var IDroute = button.data("IDr");// Extract info from data-* attributes
                    //var Desroute = button.data("description");


                    // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                    // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                    var modal = $(this);
                    //modal.find('.modal-title').text('Edit data: ' + recipient)
                    modal.find('.modal-body input[name="ID_routeD"]').val(IDroute);
                    //$("#descriptionD").text(Desroute);

                })
            })(jQuery);

            (function ($) {
                'use strict';
                $('#editModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal

                    var IDroute = button.data("IDr");// Extract info from data-* attributes
                    var Desroute = button.data("RepeatM");


                    // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                    // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                    var modal = $(this);
                    //modal.find('.modal-title').text('Edit data: ' + recipient)
                    modal.find('.modal-body input[name="ID_routeDedt"]').val(IDroute);
                    $('.modal-body select[name="custedt"]').val(Desroute);
                    //$("#descriptionD").text(Desroute);

                })
            })(jQuery);

        }

    </script>
    <script>

    $(document).ready(function () {
        function modelMatcher(params, data) {
            data.parentText = data.parentText || "";

            // Always return the object if there is nothing to compare
            if ($.trim(params.term) === '') {
                return data;
            }

            // Do a recursive check for options with children
            if (data.children && data.children.length > 0) {
                // Clone the data object if there are children
                // This is required as we modify the object to remove any non-matches
                var match = $.extend(true, {}, data);

                // Check each child of the option
                for (var c = data.children.length - 1; c >= 0; c--) {
                    var child = data.children[c];
                    child.parentText += data.parentText + " " + data.text;

                    var matches = modelMatcher(params, child);

                    // If there wasn't a match, remove the object in the array
                    if (matches == null) {
                        match.children.splice(c, 1);
                    }
                }

                // If any children matched, return the new object
                if (match.children.length > 0) {
                    return match;
                }

                // If there were no matching children, check just the plain object
                return modelMatcher(params, match);
            }
            };
        function matcher(params, data) {
            // Always return the object if there is nothing to compare
            if ($.trim(params.term) === '') {
                return data;
            }

            var original = data.text.toUpperCase();
            var term = params.term.toUpperCase();

            // Check if the text contains the term
            if (original.indexOf(term) > -1) {
                return data;
            }

            // Do a recursive check for options with children
            if (data.children && data.children.length > 0) {
                // Clone the data object if there are children
                // This is required as we modify the object to remove any non-matches
                var match = $.extend(true, {}, data);

                // Check each child of the option
                for (var c = data.children.length - 1; c >= 0; c--) {
                    var child = data.children[c];

                    var matches = matcher(params, child);

                    // If there wasn't a match, remove the object in the array
                    if (matches == null) {
                        match.children.splice(c, 1);
                    }
                }

                // If any children matched, return the new object
                if (match.children.length > 0) {
                    return match;
                }

                // If there were no matching children, check just the plain object
                return matcher(params, match);
            }

            // If it doesn't contain the term, don't return anything
            return null;
        }


        var json = JSON.parse('@Html.Raw(ViewBag.stores)')

        var FRUIT_GROUPS = $.map(json, function (obj) {
            obj.id = obj.id; // replace pk with your identifier
            obj.text = obj.text;
            obj.children = obj.children;
            return obj;
        });


        $('#storesmulti').select2({
            multiple: true,
            placeholder: "Select stores...",
            data: FRUIT_GROUPS,
            query: function (options) {
                var selectedIds = options.element.select2('val');
                var data = jQuery.extend(true, {}, FRUIT_GROUPS);
                var selectableGroups = $.map(data, function (group) {
                    var areAllChildrenSelected = true,
                        parentMatchTerm = false,
                        anyChildMatchTerm = false;
                    if (group.text.toLowerCase().indexOf(options.term.toLowerCase()) >= 0) {
                        parentMatchTerm = true;
                    }
                    var i = group.children.length
                    while (i--) {
                        var child = group.children[i];

                        if (selectedIds.indexOf(child.id) < 0) {
                            areAllChildrenSelected = false;
                        };

                        if (options.term == '' || (child.text.toLowerCase().indexOf(options.term.toLowerCase()) >= 0)) {
                            anyChildMatchTerm = true;
                        }
                        else if (!parentMatchTerm) {
                            var index = group.children.indexOf(child);
                            if (index > -1) {
                                group.children.splice(index, 1);
                            };
                        };
                    };

                    return (!areAllChildrenSelected && (parentMatchTerm || anyChildMatchTerm)) ? group : null;
                });

                options.callback({ results: selectableGroups });
            }
        }).on('select2-selecting', function (e) {
            var $select = $(this);
            if (e.val == '') {
                e.preventDefault();
                $select.select2('data', $select.select2('data').concat(e.choice.children));
                $select.select2('close');
            }
        });


    var json = JSON.parse('@Html.Raw(ViewBag.usuarios)')

    var data = $.map(json, function (obj) {
        obj.id = obj.id; // replace pk with your identifier
        obj.text = obj.text;
        return obj;
    });

    $("#repmulti").select2({
        multiple: true,
        placeholder: "Select representatives...",
        data: data

    });



        @*var json = JSON.parse('@Html.Raw(ViewBag.activitieslist)')

    var data = $.map(json, function (obj) {
        obj.id = obj.id; // replace pk with your identifier
        obj.text = obj.text;
        return obj;
    });



        $('#typesAmulti').select2({
            multiple: true,
            placeholder: "Select activities...",
            data: data,
            query: function (options) {
                var selectedIds = options.element.select2('val');
                var selectableGroups = $.map(this.data, function (group) {
                    var areChildrenAllSelected = true;
                    $.each(group.children, function (i, child) {
                        if (selectedIds.indexOf(child.id) < 0) {
                            areChildrenAllSelected = false;
                            return false; // Short-circuit $.each()
                        }
                    });
                    return !areChildrenAllSelected ? group : null;
                });
                options.callback({ results: selectableGroups });
            }
        }).on('select2-selecting', function (e) {
            var $select = $(this);
            if (e.val == '') {
                e.preventDefault();
                $select.select2('data', $select.select2('data').concat(e.choice.children));
                $select.select2('close');
            }
        });*@


    });
    </script>
}
<!--SELECT MULTI ROUTES-->
@if (ViewBag.Title == "Comercia Marketing - Representatives")
{
    <script>

    $(document).ready(function () {


    var json = JSON.parse('@Html.Raw(ViewBag.customers)')

    var data = $.map(json, function (obj) {
        obj.id = obj.ID; // replace pk with your identifier
        obj.text = obj.Name;
        return obj;
    });

        $("#Customersmulti").select2({
        multiple: true,
        placeholder: "Select customers...",
        data: data

    });


        $("#CustomersmultiE").select2({
            multiple: true,
            placeholder: "Select customers...",
            data: data

        });
  });
    </script>
}
<script>
    $(function () {
        $('#click_filter').click(function () {


            var st = new Date($('#reportrange').data('daterangepicker').startDate);
            var ed = new Date($('#reportrange').data('daterangepicker').endDate);

        var url = '@Url.Action("RoutesM", "Home", new { fstartd = "START", fendd = "FINISH"})';


            url = url.replace('START', st.toLocaleDateString());

        var newurl = url;


            newurl = newurl.replace('FINISH', ed.toLocaleDateString());
        newurl = newurl.replace(/&amp;/g, "&");
        //alert(newurl);
        window.location.href = newurl;




        });
    });
</script>


<!--NOTIFICACIONES GLOBALES-->

@if (TempData["error"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
                $.toast({
                    heading: 'Danger',
                    text: '@(TempData["error"])',
                    showHideTransition: 'slide',
                    icon: 'error',
                    loaderBg: '#800000',
                    position: 'top-right'
                })

        };
    </script>
}


@if (TempData["advertencia"] != null)
{
    <script type="text/javascript">
        window.onload = function () {

                $.toast({
                    heading: 'Warning',
                    text: '@(TempData["advertencia"])',
                    showHideTransition: 'slide',
                    icon: 'warning',
                    loaderBg: '#ff9900',
                    position: 'top-right'
                })

        };
    </script>
}


@if (TempData["exito"] != null)
{
    <script type="text/javascript">
        console.log("Success");

        $(document).ready(function () {

                $.toast({
                    heading: 'Success',
                    text: '@(TempData["exito"])',
                    showHideTransition: 'slide',
                    icon: 'success',
                    loader: false,
                    loaderBg: '#004d00',
                    position: 'top-right'
                })
        });
    </script>
}

<script>
    $(document).ready(function () {
        (function ($) {
            showSuccessToast = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Success',
                    text: 'Saved.',
                    loader: false,
                    showHideTransition: 'slide',
                    icon: 'success',
                    loaderBg: '#004d00',
                    position: 'top-right'
                })
            };
            showInfoToast = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Info',
                    text: 'And these were just the basic demos! Scroll down to check further details on how to customize the output.',
                    showHideTransition: 'slide',
                    icon: 'info',
                    loaderBg: '#46c35f',
                    position: 'top-right'
                })
            };
            showWarningToast = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Warning',
                    text: 'Wrong email or password.',
                    showHideTransition: 'slide',
                    icon: 'warning',
                    loaderBg: '#ff9900',
                    position: 'top-right'
                })
            };
            showDangerToast = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Danger',
                    text: 'And these were just the basic demos! Scroll down to check further details on how to customize the output.',
                    showHideTransition: 'slide',
                    icon: 'error',
                    loaderBg: '#f2a654',
                    position: 'top-right'
                })
            };
            showWarning = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Warning',
                    text: 'Whooaaa! Something went wrong...',
                    showHideTransition: 'slide',
                    icon: 'warning',
                    loaderBg: '#ff9900',
                    position: 'top-right'
                })
            };


        })(jQuery);
    });
</script>

<!--FIN NOTIFICACIONES GLOBALES-->
<!--TEMPLATE PREVIEW AND SAVE TEMPLATE ACTIVITY-->
@if (ViewBag.Title == "Comercia Marketing - Template preview" || ViewBag.Title == "Comercia Marketing - Activity")
{

    @Html.Partial("~/Views/Shared/ActivityScripts.cshtml")
}
@if (ViewBag.Title == "Comercia Marketing - Template previewadmin")
{

    @Html.Partial("~/Views/Shared/ActivityadminScripts.cshtml")
}
@if (ViewBag.Title == "Comercia Marketing - Template previewsoon")
{

    @Html.Partial("~/Views/Shared/ActivitysoonScripts.cshtml")
}
@if (ViewBag.Title == "Comercia Marketing - Activityea")
{

    @Html.Partial("~/Views/Shared/ActivityeaScripts.cshtml")
}
@if (ViewBag.Title == "Comercia Marketing - Template preview2")
{
    @Html.Partial("~/Views/Shared/ActivityraScripts.cshtml")
}

@if (ViewBag.Title == "Comercia Marketing - Template preview2on")
{
    @Html.Partial("~/Views/Shared/ActivityraonScripts.cshtml")
}

@if (ViewBag.Title == "Comercia Marketing - Store_stats")
{
    @Html.Partial("~/Views/Shared/visitScript.cshtml")
}

@if (ViewBag.Title == "Comercia Marketing - Store_statsadmin")
{
    @Html.Partial("~/Views/Shared/visitScriptadmin.cshtml")
}

@if (ViewBag.Title == "Comercia Marketing - RoutesM_calendar")
{
    @Html.Partial("~/Views/Shared/Routes_calendarScript.cshtml")
}
@if (ViewBag.Title == "Comercia Marketing - CustomersM stats")
{
    @Html.Partial("~/Views/Shared/Routes_calendarScriptCustomers.cshtml")
}
<script>
    $(document).ready(function () {

        $(".owl-example").owlCarousel({
            // Most important owl features
            items: 5,
            itemsCustom: false,
            itemsDesktop: [1199, 4],
            itemsDesktopSmall: [980, 3],
            itemsTablet: [768, 2],
            itemsTabletSmall: false,
            itemsMobile: [479, 1],
            singleItem: false,
            itemsScaleUp: false,

            //Basic Speeds
            slideSpeed: 200,
            paginationSpeed: 800,
            rewindSpeed: 1000,

            //Autoplay
            autoPlay: false,
            stopOnHover: false,

            // Navigation
            navigation: false,
            navigationText: ["prev", "next"],
            rewindNav: true,
            scrollPerPage: false,

            //Pagination
            pagination: true,
            paginationNumbers: false,

            // Responsive
            responsive: true,
            responsiveRefreshRate: 200,
            responsiveBaseWidth: window,

            // CSS Styles
            baseClass: "owl-carousel",
            theme: "owl-theme",

            //Lazy load
            lazyLoad: false,
            lazyFollow: true,
            lazyEffect: "fade",

            //Auto height
            autoHeight: false,

            //JSON
            jsonPath: false,
            jsonSuccess: false,

            //Mouse Events
            dragBeforeAnimFinish: true,
            mouseDrag: true,
            touchDrag: true




        });


    });
</script>
@if (ViewBag.Title != "Comercia Marketing - Template preview")
{
    <script>



        $(document).ajaxStart(function () {
            $("#loading").show();
        }).ajaxStop(function () {
            $("#loading").hide();
        }).ajaxError(function () {
            $("#loading").hide();
        });
    </script>
}
<script>
    $(function () {
        $('#clickdiv').click(function () {
            screenfull.request($('#contain22')[0]);
        });
    });
</script>

@if (ViewBag.Title == "Comercia Marketing - Store_stats")
{
    <script>
        document.getElementById("time").defaultValue = "2018-01-01T00:00:00";

        function BuildEditorHeader(array) {

            array.forEach(function (element, root) {
                var $th;
                var $tr = "<tr id='headerR'></tr>";
                $("#resultsRetail thead").append($tr);
                // <!--PARA SUBTITULOS EN ESTE CASO SERA EL HEADER
                if (element.id_resource == "24") {

                    $th = "<th>" + element.fdescription + "</th>";
                }

                $('#headerR').append($th);
            });
        };

        function BuildEditorRows(array) {

            array.forEach(function (element) {
                var $tr = "<tr></tr>";
                var $td;
                // <!--PARA SUBTITULOS EN ESTE CASO SERA EL HEADER
                if (element.id_resource == "3") { //Products

                    $td = "<td scope='col' style='text-align:left'><strong>" + element.fdescription + "</strong></td>";
                    $("#resultsRetail tbody").append($tr);
                    $("#resultsRetail tr:last").append($td);

                    if (element.children != null) {
                        BuildEditorRows(element.children);
                    }
                }

                if (element.id_resource == "16") { //Multiple_choice

                    $td = "<td data-label='" + element.fdescription + "'>";

                    if (element.fvalue != 0) {

                        $td += "<i class='mdi mdi-check icon-sm text-success'></i></td>";
                    } else {
                        $td += "&nbsp;</td>";
                    }


                    $('#resultsRetail tr:last').append($td);
                }
                if (element.id_resource == "18") { //Input_number

                    $td = "<td data-label='" + element.fdescription + "'>";

                    $td += "<label>" + element.fvalue + "</label>";
                    $td += "&nbsp;</td>";

                    $('#resultsRetail tr:last').append($td);
                }
                if (element.id_resource == "21") { //Currency

                    $td = "<td data-label='" + element.fdescription + "'>";

                    $td += "$ <label>" + element.fvalueDecimal + "</label>";
                    $td += "&nbsp;</td>";

                    $('#resultsRetail tr:last').append($td);
                }
                if (element.id_resource == "6") { ///Input_text

                    $td = "<td data-label='" + element.fdescription + "'>";

                    $td += "<label>" + element.fsource + "</label>";
                    $td += "&nbsp;</td>";

                    $('#resultsRetail tr:last').append($td);
                }
            });
        };

        (function ($) {
            'use strict';
            $('#infoRetailModal').on('show.bs.modal', function (event) {

                var button = $(event.relatedTarget);// Button that triggered the modal

                var IDform = $(event.relatedTarget).data("idform");// Extract info from data-* attributes
                var DesAct = $(event.relatedTarget).data("name");


                // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                var modal = $(this);
                //modal.find('.modal-title').text('Edit data: ' + recipient)

                $.ajax
                    ({
                        url: '/Home/Getformdata',
                        type: 'POST',
                        datatype: 'application/json',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            id_activity: IDform
                        }),
                        success: function (result) {


                            $("#resultsRetail").find("tr").remove();
                            $("#descriptionUDM").text(DesAct);

                            BuildEditorHeader(result);
                            BuildEditorRows(result);

                        },
                        error: function () {
                            alert("Whooaaa! Something went wrong..")
                        },
                    });




            })
        })(jQuery);

    </script>

    <script>
        window.onload = function () {

            (function ($) {
                'use strict';
                $('#deleteModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal

                    var IDAct = button.data("id");// Extract info from data-* attributes
                    var DesAct = button.data("description");


                    // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                    // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                    var modal = $(this);
                    //modal.find('.modal-title').text('Edit data: ' + recipient)
                    modal.find('.modal-body input[name="ID_activityD"]').val(IDAct);
                    $("#descriptionD").text(DesAct);

                })
            })(jQuery);
            (function ($) {
                'use strict';
                $('#cancelModal').on('show.bs.modal', function (event) {
                    var button = $(event.relatedTarget);// Button that triggered the modal

                    var IDAct = button.data("id");// Extract info from data-* attributes
                    var DesAct = button.data("description");


                    // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                    // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                    var modal = $(this);
                    //modal.find('.modal-title').text('Edit data: ' + recipient)
                    modal.find('.modal-body input[name="ID_activityCa"]').val(IDAct);
                    $("#descriptionCa").text(DesAct);

                })
            })(jQuery);
            (function ($) {
                'use strict';
                $('#deleteRepModal').on('show.bs.modal', function (event) {


                    var button = $(event.relatedTarget);// Button that triggered the modal

                    var IDRep = button.data("id");// Extract info from data-* attributes
                    var DesAct = button.data("description");


                    // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                    // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                    var modal = $(this);
                    //modal.find('.modal-title').text('Edit data: ' + recipient)
                    modal.find('.modal-body input[name="ID_repUD"]').val(IDRep);
                    $("#descriptionUD").text(DesAct);

                })
            })(jQuery);



            (function ($) {
                'use strict';
                $('#copyModal').on('show.bs.modal', function (event) {


                    var button = $(event.relatedTarget);// Button that triggered the modal

                    var IDRep = button.data("activity");// Extract info from data-* attributes
                    var DesAct = button.data("description");


                    // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                    // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                    var modal = $(this);
                    //modal.find('.modal-title').text('Edit data: ' + recipient)
                    modal.find('.modal-body input[name="ID_activityCopy"]').val(IDRep);
                    $("#descriptionCopy").text(DesAct);

                })
            })(jQuery);
        }

    </script>
    if (ViewBag.estadovisita == 3)
    {
        if ((Session["tipousuario"].ToString() == "8" && Session["tiporol"].ToString() == "8") || Session["tipousuario"].ToString() == "1")
        { }
        else
        {
            <script>
                window.onload = function () {
                    $("#activitiesdiv").addClass("disable")
                        .click(function () {
                            return false;
                        });
                }
            </script>
        }

    }
}

@if (ViewBag.Title == "Comercia Marketing - CustomersM stats")
{
    <script>
    'use strict';
    // This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded.
    $(document).ready(function () {
        Initialize();
    });

    function Initialize() {

    var map = new google.maps.Map(document.getElementById('map-with-marker'), {
        zoom: 4,
        scrollwheel: true,
        center: { lat: 35.2289067, lng: -86.885620 }

    });

    var data = @Html.Raw(ViewBag.routes_map);
    var markers = [];
    // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
    $.each(data, function (i, item) {
        var marker;
             var image = '@Url.Content("~/Content/newstyle2/images/marker32x32.png")';
            var marker;




            if (item.demo_state == 3) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName

                });
            }
            if (item.demo_state == 2) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName


                });
            }
            if (item.demo_state == 1) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName

                });
            }
            if (item.demo_state == 4) {
                marker = new mapIcons.Marker({
                    position: new google.maps.LatLng(item.GeoLong, item.GeoLat),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: item.PlaceName
                    //icon: image

                });
            }



        // Make the marker-pin blue!
        //if (item.demo_state == "3") {
        //    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/orange-dot.png')
        //}
        //if (item.demo_state == "2") {
        //    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/green-dot.png')
        //}
        //if (item.demo_state == "1") {
        //    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/red-dot.png')
        //}
        //if (item.demo_state == "4") {
        //    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue-dot.png')
        //}

        // put in some information about each json object - in this case, the opening hours.

        //colocamos la url de la demo
        //var url = '@Url.Action("PreviewSendDemoResume", "Demos", new { id = "DEMOID" })';


        //url = url.replace('DEMOID', item.id);

        //var infowindow = new google.maps.InfoWindow({
        //    content: "<div class='infoDiv'><h8>Place: " + item.store + ".</h8><br>" + "<div><h8>Customer: " + item.customer + ".</h8><br><h8>Visit date: " + item.date + ".</h8><br><h8>Representatives: " + item.representatives + ".</h8><br><h8>Comment: " + item.comment + ".</h8><br><a href='" + "#" + "' class='btn btn-primary' target='_blank'>Preview</a></div></div>"
        //});
        var estructuradiv = '<div  id="RouteDetails_' + item.id + '">';
        estructuradiv += '<div class="card">';
        estructuradiv += '<div class="card-body">';
        estructuradiv += '<div class="row mt-4">';
        estructuradiv += '<div class="col-md-12">';
        estructuradiv += ' <h5>Visit details</h5>';
        estructuradiv += '<ul class="nav nav-tabs tab-simple-styled" role="tablist">';
        estructuradiv += '<li class="nav-item">';
        estructuradiv += '<a class="nav-link active" id="tab-3-1_' + item.id + '" data-toggle="tab" href="#home-3-1_' + item.id + '" role="tab" aria-controls="home-3-1_' + item.id + '" aria-selected="true"><i class="mdi mdi-weather-night"></i>Resume</a>';
        estructuradiv += '</li>';
        estructuradiv += '<li class="nav-item">';
        estructuradiv += '<a class="nav-link" id="tab-3-2_' + item.id + '" data-toggle="tab" href="#profile-3-2_' + item.id + '" role="tab" aria-controls="profile-3-2_' + item.id + '" aria-selected="false"><i class="mdi mdi-tag-multiple"></i>Comments</a>';
        estructuradiv += '</li>';
        estructuradiv += '</ul>';
        estructuradiv += '<div class="tab-content tab-content-basic">';
        estructuradiv += '<div class="tab-pane fade show active" id="home-3-1_' + item.id + '" role="tabpanel" aria-labelledby="tab-3-1_' + item.id + '">';
        estructuradiv += '<p class="mb-0" > ID: ' + item.id + '</p>';
        estructuradiv += '<p class="mb-0" > STORE: ' + item.store + '</p>';
        estructuradiv += '<p class="mb-0"> ADDRESS: ' + item.address + '</p>';
        estructuradiv += '<p > DATE: ' + item.date + '</p>';
        estructuradiv += '<p > ROUTE: ' + item.representatives + '</p>';
        estructuradiv += '</div>';
        estructuradiv += '<div class="tab-pane fade" id="profile-3-2_' + item.id + '" role="tabpanel" aria-labelledby="tab-3-2_' + item.id + '">';
        estructuradiv += '<p > COMMENT: ' + item.comment + '</p>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';
        estructuradiv += '</div>';

        var infowindow = new google.maps.InfoWindow({
            content: estructuradiv
        });

        function toggleBounce() {
            if (marker.getAnimation() !== null) {
                marker.setAnimation(null);
            } else {
                marker.setAnimation(4);
            }
        }
        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(map, marker);
            toggleBounce();
            //myFunction(item.id, item.store, item.customer, item.date, item.representatives, item.comment);
        });

        marker.addListener('dblclick', function () {
            map.setZoom(18);
            map.setCenter(marker.getPosition());

            // We get the map's default panorama and set up some defaults.
            // Note that we don't yet set it visible.
            panorama = map.getStreetView();
            panorama.setPosition(marker.getPosition());
            panorama.setPov(({
                heading: 265,
                pitch: 0
            }));
        });

        //Agregamos el marcador al array de marcadores
        markers.push(marker);


    })


    // Add a marker clusterer to manage the markers.
    var markerCluster = new MarkerClusterer(map, markers,
        { imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' });





}



    //function myFunction(ID, store, customer, date, representatives, comment ) {
    //    var id_mapitem = document.getElementById("map_id");
    //    var store_mapitem = document.getElementById("map_storename");
    //    var store_customeritem = document.getElementById("map_customername");
    //    var store_dateitem = document.getElementById("map_date");
    //    var store_representativeitem = document.getElementById("map_representatives");
    //    var store_commentitem = document.getElementById("map_comment");


    //    id_mapitem.innerText = "";
    //    store_mapitem.innerText = "";
    //    store_customeritem.innerText = "";
    //    store_dateitem.innerText = "";
    //    store_representativeitem.innerText = "";
    //    store_commentitem.innerText = "";

    //    id_mapitem.innerText = "Visit ID: " + ID;
    //    store_mapitem.innerText = "Store: " + store;
    //    //store_customeritem.innerText = "Customer: " + customer;
    //    store_dateitem.innerText = "Date: " + date;
    //    store_representativeitem.innerText = "Route: " + representatives;
    //    store_commentitem.innerText = "Comment: " + comment;

    //    var x = document.getElementById("RouteDetails");
    //    if (x.style.display === "none") {
    //        x.style.display = "block";
    //    } else {
    //        //x.style.display = "none";
    //    }
    //}

    </script>
    <!--PARA CERRAR DIV MAP-->
    <script>
        var button = document.getElementById('close_divmap'); // Assumes element with id='button'

        button.onclick = function () {
            var div = document.getElementById('RouteDetails');
            div.style.display = 'none';

        };

    </script>
    <script>
    $(function () {
        $('#click_filterStoresStats').click(function () {


            var st = new Date($('#reportrange').data('daterangepicker').startDate);
            var ed = new Date($('#reportrange').data('daterangepicker').endDate);

            var idstore = document.getElementById('filterstore').value;


        var url = '@Url.Action("CustomerM_stats", "Home", new { fstartd = "START", fendd = "FINISH", store="STORE"})';


            url = url.replace('START', st.toLocaleDateString());

            url = url.replace('STORE', idstore);
        var newurl = url;


            newurl = newurl.replace('FINISH', ed.toLocaleDateString());
        newurl = newurl.replace(/&amp;/g, "&");
        //alert(newurl);
        window.location.href = newurl;




        });
    });





    </script>

}

@if (ViewBag.Title == "Comercia Marketing - Brand competitors")
{
    <script>

        function getbrands() {
            var customerId = $("#customer_list").val();



            $.ajax
                ({
                    url: '/Home/Getbrands',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        customerID: customerId

                    }),
                    success: function (result) {

                        $("#brands_list").html("");
                        $("#brands_list").append($('<option></option>').val(0).html("Select a Brand"))
                        $.each($.parseJSON(result), function (i, brands) {

                            $("#brands_list").append
                                ($('<option></option>').val(brands.FirmCode).html(brands.FirmName));



                        }

                        )

                    },
                    error: function () {
                        alert("Whooaaa! Something went wrong..")
                    },
                });



        }

        (function ($) {
            'use strict';
            $('#deleteModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);// Button that triggered the modal

                var ID = button.data("id");// Extract info from data-* attributes



                // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                var modal = $(this);
                //modal.find('.modal-title').text('Edit data: ' + recipient)
                modal.find('.modal-body input[name="idbrandD"]').val(ID);


            })
        })(jQuery);
    </script>
}
@if (ViewBag.Title == "Comercia Marketing - Store_statsadmin")
{
    <script>
        $("#demotimetitle").hide();
        $("#demotimediv").hide();

        function getCustomers() {
            var Idrep = $("#ID_rep").val();

            if (Idrep == "0" || Idrep == null) {

            } else {

                $.ajax
                    ({
                        url: '/VisitsMs/GetCustomer_reps',
                        type: 'POST',
                        datatype: 'application/json',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            ID_usuario: Idrep
                        }),
                        success: function (result) {

                            $("#ID_customer").html("");
                            $("#ID_customer").append($('<option></option>').val(0).html("Select a customer"))
                            $.each($.parseJSON(result), function (i, brands) {
                                if (brands.isselected) {//si esta seleccionado
                                    $("#ID_customer").append
                                        ($('<option selected></option>').val(brands.ID).html(brands.Name));


                                } else {
                                    $("#ID_customer").append
                                        ($('<option></option>').val(brands.ID).html(brands.Name));
                                }


                            }

                            )
                            $("#loading").hide();

                        },
                        error: function () {
                            alert("Whooaaa! Something went wrong..")
                            $("#loading").hide();
                        },
                    });
            }


        }
        function getActivity() {
            var Idact = $("#ID_form").val();

            $.ajax
                ({
                    url: '/VisitsMs/GetType',
                    type: 'POST',
                    datatype: 'application/json',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        ID_type: Idact
                    }),
                    success: function (result) {

                        if (result != "4") {
                            $("#demotimetitle").hide();
                            $("#demotimediv").hide();
                        } else {
                            $("#demotimetitle").show();
                            $("#demotimediv").show();
                        }

                    },
                    error: function () {
                        //alert("Whooaaa! Something went wrong..")

                    },
                });



        }

    </script>
}


<!--FILTERS REPRESENTATIVE STATS-->
@if (ViewBag.Title == "Comercia Marketing - Representative_stats")
{

    <script>
    $(function () {
        $('#click_filterR').click(function () {


            var st = new Date($('#reportrange').data('daterangepicker').startDate);
            var ed = new Date($('#reportrange').data('daterangepicker').endDate);

        var url = '@Url.Action("Representative_stats", "Home", new { id=ViewBag.ID_rep, fstartd = "START", fendd = "FINISH" })';


            url = url.replace('START', st.toDateString());

        var newurl = url;


            newurl = newurl.replace('FINISH', ed.toDateString());
        newurl = newurl.replace(/&amp;/g, "&");
        //alert(newurl);
        window.location.href = newurl;




        });
    });
    </script>


}

@if (ViewBag.Title == "Comercia Marketing - Gallery")
{

    <script>
    $(function () {
        $('#click_filterR').click(function () {

            var idvisita = $('#lstvisits').val();
            var idact = $('#lstActivities').val();
            var idbra = $('#lstbrand').val();
            var idrep = $('#lstreps').val();
            var idsection = $('#lstsection').val();
        var url = '@Url.Action("GalleryG", "VisitsMs", new { id="START", IDcustomer = ViewBag.customerID, brand = "DEFB", activityform="FINISH", showimg=true, rep="SELR", section ="PRSTI" })';


            url = url.replace('START', idvisita);

        var newurl = url;


            newurl = newurl.replace('FINISH', idact);
            newurl = newurl.replace('DEFB', idbra);
            newurl = newurl.replace('SELR', idrep);
            newurl = newurl.replace('PRSTI', idsection);
        newurl = newurl.replace(/&amp;/g, "&");
        //alert(newurl);
        window.location.href = newurl;




        });
    });
    </script>


}

@if (ViewBag.Title == "Comercia Marketing - CustomersM stats")
{

    <script>
    $(function () {
        $('#click_filterR').click(function () {

            var br = $("#brand").val();

            var st = new Date($('#reportrange').data('daterangepicker').startDate);
            var ed = new Date($('#reportrange').data('daterangepicker').endDate);

        var url = '@Url.Action("CustomerM_stats", "Home", new { id=ViewBag.customerID, fstartd = "START", fendd = "FINISH", brand = "marca" })';


            url = url.replace('START', st.toDateString());

        var newurl = url;


            newurl = newurl.replace('FINISH', ed.toDateString());
        newurl = newurl.replace(/&amp;/g, "&");
        //alert(newurl);
            newurl = newurl.replace('marca', br);

        window.location.href = newurl;




        });
    });
    </script>
}
<!--FILTERS STORE STATS-->
@if (ViewBag.Title == "Comercia Marketing - Store_stats")
{

    <script>
    $(function () {
        $('#click_filterR').click(function () {


            var st = new Date($('#reportrange').data('daterangepicker').startDate);
            var ed = new Date($('#reportrange').data('daterangepicker').endDate);

        var url = '@Url.Action("StoreM_stats", "Home", new { id=ViewBag.ID_store, fstartd = "START", fendd = "FINISH" })';


            url = url.replace('START', st.toLocaleDateString());

        var newurl = url;


            newurl = newurl.replace('FINISH', ed.toLocaleDateString());
        newurl = newurl.replace(/&amp;/g, "&");
        //alert(newurl);
        window.location.href = newurl;




        });
    });
    </script>
}
<!--GALLERY-->
@if (ViewBag.Title == "Comercia Marketing - Gallery")
{

    <script>

        $(document).ready(function () {
            $('.parentdiv').click(function (e) {
                var img = $(this).parent().parent().parent().find('img[data-enlargable]');
                img.addClass('img-enlargable');

                var src = img.attr('src');

                $('<div>').css({
                    background: 'RGBA(0,0,0,.5) url(' + src + ') no-repeat center',
                    backgroundSize: 'contain',
                    width: '100%', height: '100%',
                    position: 'fixed',
                    zIndex: '10000',
                    top: '0', left: '0',
                    cursor: 'zoom-out'
                }).click(function () {
                    $(this).remove();
                }).appendTo('body');
            });

        });
    </script>
}
@if (ViewBag.Title == "Comercia Marketing - CustomersM stats")
{
    //update
    <script type="text/javascript">

        $(document).ready(function () {
            $('.tree').treegrid({
                expanderExpandedClass: 'mdi mdi-store',
                expanderCollapsedClass: 'mdi mdi-store'
            });

        });
    </script>

    <script type="text/javascript">
        function filter(clicked_id) {
            var table = $('#order-listing').DataTable();

            //table.columns(4).search("").draw();
            table.columns(4).search("" + clicked_id + "", true, false, true).draw();
            //table.columns(3).search("" + clicked_id + "", true, false, true).draw();
        }

        function filter_clear() {
            var table = $('#order-listing').DataTable();

            //table.columns(4).search("").draw();
            table.columns(3).search("").draw();
        }

        //$("#brand").select2({


        //});
            @*var json = JSON.parse('@Html.Raw(ViewBag.brands)')

    var data = $.map(json, function (obj) {
        obj.id = obj.id; // replace pk with your identifier
        obj.text = obj.text;
        return obj;
    });




        $('#brand').val();
        $(document).ready(function () {

            $("#brand").select2().select2('val', '@Html.Raw(ViewBag.branddef)');

        });*@
    </script>
}