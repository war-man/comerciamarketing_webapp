<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="Comercia Marketing App">
    <title>@ViewData["Title"]</title>

    @Html.Partial("~/Views/Shared/Styles2.cshtml")
    <style>
        #rightss {
            height: 500px;
            overflow-y: scroll;
        }

        .modal {
            overflow: auto !important;
        }

        #sig-canvas {
            width: 200px;
            height: 150px;
            border-style: dashed;
            border-radius: 0.50px;
            border-color: lightgray;
        }

        .currency {
        }

        .currency-symbol {
            position: absolute;
            padding: 7px 4px 0px;
            font-size: 13px;
        }

        .currency-symbolv2 {
            position: absolute;
            padding: 1px 4px 0px;
            font-size: 13px;
        }
    </style>
</head>
<body class="horizontal-menu-2">
    <div style="background-color:#000">.</div>
    <div class="container-scroller">
        <!-- Horizontal Menu Start -->
        @if (ViewBag.Title != "Comercia Marketing")
        {
            @Html.Partial("~/Views/Shared/Menu2.cshtml")
        }
        <!-- Horizontal Menu Ends -->
        @RenderBody()

    </div>
    @Html.Partial("~/Views/Shared/Scripts2.cshtml")
</body>
</html>
@if (ViewBag.Title != "Comercia Marketing - FormsM")
{
    <script type="text/javascript">
        $(function () {

            var start = moment();
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }

            $('#reportrange').daterangepicker({

                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);

        });
    </script>
    <script>
        var start = moment();
        var end = moment();

        $(function () {
            $('input[name="dailyStatsM"]').daterangepicker({
                startDate: start,
                endDate: end,
                minDate: moment().startOf('month'),
                maxDate: moment().endOf('month')
            });
        });
    </script>
}
@if (ViewBag.Title == "Comercia Marketing - CustomersM stats")
{
    <script type="text/javascript">
        google.charts.load('current', {
            'packages': ['geochart'],
            // Note: you will need to get a mapsApiKey for your project.
            // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings
            'mapsApiKey': 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY'
        });
        google.charts.setOnLoadCallback(drawRegionsMap);

        function drawRegionsMap() {
            var data = google.visualization.arrayToDataTable([
                ['State', 'Stats'],
                ['Alabama', 100],
                ['Alaska', 200],
                ['Arizona', 500],
                ['Arkansas', 0],
                ['California', 0],
                ['Colorado', 0],
                ['Connecticut', 0],
                ['Delaware', 0],
                ['Florida', 0],
                ['Georgia', 0],
                ['Hawaii', 0],
                ['Idaho', 0],
                ['Illinois', 0],
                ['Indiana', 0],
                ['Iowa', 0],
                ['Kansas', 0],
                ['Kentucky', 0],
                ['Louisiana', 0],
                ['Maine', 0],
                ['Maryland', 0],
                ['Massachusetts', 0],
                ['Michigan', 0],
                ['Minnesota', 0],
                ['Mississippi', 0],
                ['Missouri', 0],
                ['Montana', 0],
                ['Nebraska', 0],
                ['Nevada', 0],
                ['New Hampshire', 0],
                ['New Jersey', 0],
                ['New Mexico', 0],
                ['New York', 0],
                ['North Carolina', 0],
                ['North Dakota', 0],
                ['Ohio', 0],
                ['Oklahoma', 0],
                ['Oregon', 0],
                ['Pennsylvania', 0],
                ['Rhode Island', 0],
                ['South Carolina', 0],
                ['South Dakota', 0],
                ['Tennessee', 0],
                ['Texas', 0],
                ['Utah', 0],
                ['Vermont', 0],
                ['Virginia', 0],
                ['Washington', 0],
                ['West Virginia', 0],
                ['Wisconsin', 0],
                ['Wyoming', 0]
            ]);

            var options = {
                width: 556,
                height: 347,
                region: "US",
                resolution: "provinces"
            };

            var chart = new google.visualization.GeoChart(document.getElementById('regions_div'));

            chart.draw(data, options);
        }
    </script>
}


@if (ViewBag.Title == "Comercia Marketing - Home")
{
    <script>
    'use strict';
    // This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded.
    $(document).ready(function () {
        Initialize();
    });

    function Initialize() {

    var map = new google.maps.Map(document.getElementById('map-with-marker'), {
        zoom: 4,
        scrollwheel: true,
        center: { lat: 35.2289067, lng: -86.885620 }

    });

    var data = @Html.Raw(ViewBag.routes_map);
    var markers = [];
    // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
    $.each(data, function (i, item) {
        var marker = new google.maps.Marker({
            'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
            'map': map,
            'title': item.PlaceName
        });


        // Make the marker-pin blue!
        if (item.demo_state == "On Hold") {
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/orange-dot.png')
        }
        if (item.demo_state == "In progress") {
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/green-dot.png')
        }
        if (item.demo_state == "Canceled") {
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/red-dot.png')
        }
        if (item.demo_state == "Finished") {
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue-dot.png')
        }

        // put in some information about each json object - in this case, the opening hours.

        //colocamos la url de la demo
        //var url = '@Url.Action("PreviewSendDemoResume", "Demos", new { id = "DEMOID" })';


        //url = url.replace('DEMOID', item.id);

        //var infowindow = new google.maps.InfoWindow({
        //    content: "<div class='infoDiv'><h8>Place: " + item.store + ".</h8><br>" + "<div><h8>Customer: " + item.customer + ".</h8><br><h8>Visit date: " + item.date + ".</h8><br><h8>Representatives: " + item.representatives + ".</h8><br><h8>Comment: " + item.comment + ".</h8><br><a href='" + "#" + "' class='btn btn-primary' target='_blank'>Preview</a></div></div>"
        //});

        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
        google.maps.event.addListener(marker, 'click', function () {
            //infowindow.open(map, marker);
            myFunction(item.id, item.store, item.customer, item.date, item.representatives, item.comment);
        });

        marker.addListener('dblclick', function () {
            map.setZoom(18);
            map.setCenter(marker.getPosition());

            // We get the map's default panorama and set up some defaults.
            // Note that we don't yet set it visible.
            panorama = map.getStreetView();
            panorama.setPosition(marker.getPosition());
            panorama.setPov(({
                heading: 265,
                pitch: 0
            }));
        });

        //Agregamos el marcador al array de marcadores
        markers.push(marker);


    })


    // Add a marker clusterer to manage the markers.
    var markerCluster = new MarkerClusterer(map, markers,
        { imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' });

}



    function myFunction(ID, store, customer, date, representatives, comment ) {
        var id_mapitem = document.getElementById("map_id");
        var store_mapitem = document.getElementById("map_storename");
        var store_customeritem = document.getElementById("map_customername");
        var store_dateitem = document.getElementById("map_date");
        var store_representativeitem = document.getElementById("map_representatives");
        var store_commentitem = document.getElementById("map_comment");


        id_mapitem.innerText = "";
        store_mapitem.innerText = "";
        store_customeritem.innerText = "";
        store_dateitem.innerText = "";
        store_representativeitem.innerText = "";
        store_commentitem.innerText = "";

        id_mapitem.innerText = "Visit ID: " + ID;
        store_mapitem.innerText = "Store: " + store;
        store_customeritem.innerText = "Customer: " + customer;
        store_dateitem.innerText = "Date: " + date;
        store_representativeitem.innerText = "Representatives: " + representatives;
        store_commentitem.innerText = "Comment: " + comment;

        var x = document.getElementById("RouteDetails");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            //x.style.display = "none";
        }
    }

    </script>
    <!--PARA CERRAR DIV MAP-->
    <script>
        var button = document.getElementById('close_divmap'); // Assumes element with id='button'

        button.onclick = function () {
            var div = document.getElementById('RouteDetails');
            div.style.display = 'none';

        };

    </script>
}
<!--FORM BUILDER-->
@if (ViewBag.Title == "Comercia Marketing - FormsM")
{
    @Html.Partial("~/Views/Shared/FormBuilderScriptM.cshtml")



}

@if (ViewBag.Title == "Comercia Marketing - RoutesM details")
{
    <script>
    'use strict';
    // This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded.
    $(document).ready(function () {
        Initialize();
    });

    function Initialize() {

    var map = new google.maps.Map(document.getElementById('map-with-marker'), {
        zoom: 5,
        scrollwheel: true,
        center: { lat: 35.2289067, lng: -86.885620 }

    });

    var data = @Html.Raw(ViewBag.routes_map);
    var markers = [];
    // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
    $.each(data, function (i, item) {
        var marker = new google.maps.Marker({
            'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
            'map': map,
            'title': item.PlaceName
        });


        // Make the marker-pin blue!
        if (item.demo_state == 3) {
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/orange-dot.png')
        }
        if (item.demo_state == 2) {
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/green-dot.png')
        }
        if (item.demo_state == 1) {
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/red-dot.png')
        }
        if (item.demo_state == 4) {
            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue-dot.png')
        }

        // put in some information about each json object - in this case, the opening hours.

        //colocamos la url de la demo
        //var url = '@Url.Action("PreviewSendDemoResume", "Demos", new { id = "DEMOID" })';


        //url = url.replace('DEMOID', item.id);

        //var infowindow = new google.maps.InfoWindow({
        //    content: "<div class='infoDiv'><h8>Place: " + item.store + ".</h8><br>" + "<div><h8>Customer: " + item.customer + ".</h8><br><h8>Visit date: " + item.date + ".</h8><br><h8>Representatives: " + item.representatives + ".</h8><br><h8>Comment: " + item.comment + ".</h8><br><a href='" + "#" + "' class='btn btn-primary' target='_blank'>Preview</a></div></div>"
        //});

        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
        google.maps.event.addListener(marker, 'click', function () {
            //infowindow.open(map, marker);
            myFunction(item.id, item.store, item.customer, item.date, item.representatives, item.comment);
        });

        marker.addListener('dblclick', function () {
            map.setZoom(18);
            map.setCenter(marker.getPosition());

            // We get the map's default panorama and set up some defaults.
            // Note that we don't yet set it visible.
            panorama = map.getStreetView();
            panorama.setPosition(marker.getPosition());
            panorama.setPov(({
                heading: 265,
                pitch: 0
            }));
        });

        //Agregamos el marcador al array de marcadores
        markers.push(marker);


    })


    // Add a marker clusterer to manage the markers.
    var markerCluster = new MarkerClusterer(map, markers,
        { imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' });

           }



    function myFunction(ID, store, customer, date, representatives, comment ) {
        var id_mapitem = document.getElementById("map_id");
        var store_mapitem = document.getElementById("map_storename");
        var store_customeritem = document.getElementById("map_customername");
        var store_dateitem = document.getElementById("map_date");
        var store_representativeitem = document.getElementById("map_representatives");
        var store_commentitem = document.getElementById("map_comment");


        id_mapitem.innerText = "";
        store_mapitem.innerText = "";
        store_customeritem.innerText = "";
        store_dateitem.innerText = "";
        store_representativeitem.innerText = "";
        store_commentitem.innerText = "";

        id_mapitem.innerText = "Visit ID: " + ID;
        store_mapitem.innerText = "Store: " + store;
        store_customeritem.innerText = "Customer: " + customer;
        store_dateitem.innerText = "Date: " + date;
        store_representativeitem.innerText = "Representatives: " + representatives;
        store_commentitem.innerText = "Comment: " + comment;

        var x = document.getElementById("RouteDetails");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            //x.style.display = "none";
        }
    }

    </script>
    <!--PARA CERRAR DIV MAP-->
    <script>
        var button = document.getElementById('close_divmap'); // Assumes element with id='button'

        button.onclick = function () {
            var div = document.getElementById('RouteDetails');
            div.style.display = 'none';

        };

    </script>
}

<script>
    $(document).ready(function () {
        $('#storesM').on('change', function () {
            var conceptName = $('#storesM').find(":selected").text();

            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;

            alert(valueSelected);
        });
    });

</script>

<!--SELECT MULTI ROUTES-->
@if (ViewBag.Title == "Comercia Marketing - RoutesM")
{
    <script>


        var json = JSON.parse('@Html.Raw(ViewBag.stores)')

    var FRUIT_GROUPS = $.map(json, function (obj) {
        obj.id = obj.id; // replace pk with your identifier
        obj.text = obj.text;
        obj.children = obj.children;
        return obj;
    });


    $('#storesmulti').select2({
        multiple: true,
        placeholder: "Select stores...",
        data: FRUIT_GROUPS,
        query: function (options) {
            var selectedIds = options.element.select2('val');
            var selectableGroups = $.map(this.data, function (group) {
                var areChildrenAllSelected = true;
                $.each(group.children, function (i, child) {
                    if (selectedIds.indexOf(child.id) < 0) {
                        areChildrenAllSelected = false;
                        return false; // Short-circuit $.each()
                    }
                });
                return !areChildrenAllSelected ? group : null;
            });
            options.callback({ results: selectableGroups });
        }
    }).on('select2-selecting', function (e) {
        var $select = $(this);
        if (e.val == '') {
            e.preventDefault();
            $select.select2('data', $select.select2('data').concat(e.choice.children));
            $select.select2('close');
        }
    });

    $('#showValue').click(function () {
        $('#output').text($('#storesmulti').val());
    });

    $("#checkbox").click(function () {
        if ($("#checkbox").is(':checked')) {
            $('#storesmulti').select2("val", "");
            for (var index in FRUIT_GROUPS) {
                $('#storesmulti').select2('data', $('#storesmulti').select2('data').concat(FRUIT_GROUPS[index].children));
            }
        } else {
            $('#storesmulti').select2("val", "");
        }
    });

    var json = JSON.parse('@Html.Raw(ViewBag.usuarios)')

    var data = $.map(json, function (obj) {
        obj.id = obj.id; // replace pk with your identifier
        obj.text = obj.text;
        return obj;
    });



    $("#repmulti").select2({
        multiple: true,
        placeholder: "Select representatives...",
        data: data

    });

    var json = JSON.parse('@Html.Raw(ViewBag.activitieslist)')

    var data = $.map(json, function (obj) {
        obj.id = obj.id; // replace pk with your identifier
        obj.text = obj.text;
        return obj;
    });



        $('#typesAmulti').select2({
            multiple: true,
            placeholder: "Select activities...",
            data: data,
            query: function (options) {
                var selectedIds = options.element.select2('val');
                var selectableGroups = $.map(this.data, function (group) {
                    var areChildrenAllSelected = true;
                    $.each(group.children, function (i, child) {
                        if (selectedIds.indexOf(child.id) < 0) {
                            areChildrenAllSelected = false;
                            return false; // Short-circuit $.each()
                        }
                    });
                    return !areChildrenAllSelected ? group : null;
                });
                options.callback({ results: selectableGroups });
            }
        }).on('select2-selecting', function (e) {
            var $select = $(this);
            if (e.val == '') {
                e.preventDefault();
                $select.select2('data', $select.select2('data').concat(e.choice.children));
                $select.select2('close');
            }
        });

    </script>
}
<!--NOTIFICACIONES GLOBALES-->

@if (TempData["error"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
                $.toast({
                    heading: 'Danger',
                    text: '@(TempData["error"])',
                    showHideTransition: 'slide',
                    icon: 'error',
                    loaderBg: '#800000',
                    position: 'top-right'
                })

        };
    </script>
}


@if (TempData["advertencia"] != null)
{
    <script type="text/javascript">
        window.onload = function () {

                $.toast({
                    heading: 'Warning',
                    text: '@(TempData["advertencia"])',
                    showHideTransition: 'slide',
                    icon: 'warning',
                    loaderBg: '#ff9900',
                    position: 'top-right'
                })

        };
    </script>
}


@if (TempData["exito"] != null)
{
    <script type="text/javascript">
        console.log("Success");

        $(document).ready(function () {

                $.toast({
                    heading: 'Success',
                    text: '@(TempData["exito"])',
                    showHideTransition: 'slide',
                    icon: 'success',
                    loaderBg: '#004d00',
                    position: 'top-right'
                })
        });
    </script>
}

<script>
    $(document).ready(function () {
        (function ($) {
            showSuccessToast = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Success',
                    text: 'Saved.',
                    showHideTransition: 'slide',
                    icon: 'success',
                    loaderBg: '#004d00',
                    position: 'top-right'
                })
            };
            showInfoToast = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Info',
                    text: 'And these were just the basic demos! Scroll down to check further details on how to customize the output.',
                    showHideTransition: 'slide',
                    icon: 'info',
                    loaderBg: '#46c35f',
                    position: 'top-right'
                })
            };
            showWarningToast = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Warning',
                    text: 'Wrong email or password.',
                    showHideTransition: 'slide',
                    icon: 'warning',
                    loaderBg: '#ff9900',
                    position: 'top-right'
                })
            };
            showDangerToast = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Danger',
                    text: 'And these were just the basic demos! Scroll down to check further details on how to customize the output.',
                    showHideTransition: 'slide',
                    icon: 'error',
                    loaderBg: '#f2a654',
                    position: 'top-right'
                })
            };
            showWarning = function () {
                'use strict';
                resetToastPosition();
                $.toast({
                    heading: 'Warning',
                    text: 'Whooaaa! Something went wrong...',
                    showHideTransition: 'slide',
                    icon: 'warning',
                    loaderBg: '#ff9900',
                    position: 'top-right'
                })
            };


        })(jQuery);
    });
</script>

<!--FIN NOTIFICACIONES GLOBALES-->
<!--TEMPLATE PREVIEW AND SAVE TEMPLATE ACTIVITY-->
@if (ViewBag.Title == "Comercia Marketing - Template preview" || ViewBag.Title == "Comercia Marketing - Activity")
{

    @Html.Partial("~/Views/Shared/ActivityScripts.cshtml")
}

@if (ViewBag.Title == "Comercia Marketing - Template preview2")
{
    @Html.Partial("~/Views/Shared/ActivityraScripts.cshtml")
}


<script>
    $(document).ready(function () {

        $(".owl-example").owlCarousel({
            // Most important owl features
            items: 5,
            itemsCustom: false,
            itemsDesktop: [1199, 4],
            itemsDesktopSmall: [980, 3],
            itemsTablet: [768, 2],
            itemsTabletSmall: false,
            itemsMobile: [479, 1],
            singleItem: false,
            itemsScaleUp: false,

            //Basic Speeds
            slideSpeed: 200,
            paginationSpeed: 800,
            rewindSpeed: 1000,

            //Autoplay
            autoPlay: false,
            stopOnHover: false,

            // Navigation
            navigation: false,
            navigationText: ["prev", "next"],
            rewindNav: true,
            scrollPerPage: false,

            //Pagination
            pagination: true,
            paginationNumbers: false,

            // Responsive
            responsive: true,
            responsiveRefreshRate: 200,
            responsiveBaseWidth: window,

            // CSS Styles
            baseClass: "owl-carousel",
            theme: "owl-theme",

            //Lazy load
            lazyLoad: false,
            lazyFollow: true,
            lazyEffect: "fade",

            //Auto height
            autoHeight: false,

            //JSON
            jsonPath: false,
            jsonSuccess: false,

            //Mouse Events
            dragBeforeAnimFinish: true,
            mouseDrag: true,
            touchDrag: true




        });


    });
</script>

